Nonterminals useless in grammar

   stringliteral
   longinteger
   integer
   floatnumber
   imagnumber
   literal
   atom
   enclosure


Terminals unused in grammar

   FALSE
   NONE
   TRUE
   AND
   CLASS
   DEF
   ELIF
   ELSE
   EXCEPT
   FINALLY
   FOR
   IF
   IS
   LAMBDA
   NOT
   OR
   TRY
   WHILE
   WITH
   SHORTSTRING
   LONGSTRING
   DECINTEGER
   OCTINTEGER
   HEXINTEGER
   POINTFLOAT
   EXPONENTFLOAT
   IMAGNUMBER
   ELLIPSIS
   PTR_OP
   LE_OP
   GE_OP
   EQ_OP
   NE_OP
   NEWLINE
   'l'
   'L'


Rules useless in grammar

  121 stringliteral: SHORTSTRING
  122              | LONGSTRING

  123 longinteger: integer 'l'
  124            | integer 'L'

  125 integer: DECINTEGER
  126        | OCTINTEGER
  127        | HEXINTEGER

  128 floatnumber: POINTFLOAT
  129            | EXPONENTFLOAT

  130 imagnumber: IMAGNUMBER

  131 literal: stringliteral
  132        | integer
  133        | longinteger
  134        | floatnumber
  135        | imagnumber

  136 atom: identifier
  137     | literal
  138     | enclosure

  139 enclosure: "TODO"


Rules useless in parser due to conflicts

    6 subscription: "TODO"

    7 slicing: "TODO"

   95 relative_module: module

  114 global_stmt_extended: global_stmt_extended


Состояние 15 конфликты: 15 вывода/вывода
Состояние 47 конфликты: 5 вывода/вывода
Состояние 52 конфликты: 1 сдвига/вывода
Состояние 89 конфликты: 1 сдвига/вывода
Состояние 96 конфликты: 1 вывода/вывода
Состояние 113 конфликты: 1 сдвига/вывода
Состояние 116 конфликты: 1 сдвига/вывода


Грамматика

    0 $accept: start $end

    1 start: input

    2 identifier: IDENTIFIER

    3 yield_expression: YIELD
    4                 | YIELD expression_list

    5 attributeref: "TODO"

    6 subscription: "TODO"

    7 slicing: "TODO"

    8 or_expr: "TODO"

    9 simple_stmt: expression_stmt
   10            | assert_stmt
   11            | assignment_stmt
   12            | augmented_assignment_stmt
   13            | pass_stmt
   14            | del_stmt
   15            | print_stmt
   16            | return_stmt
   17            | yield_stmt
   18            | raise_stmt
   19            | break_stmt
   20            | continue_stmt
   21            | import_stmt
   22            | global_stmt
   23            | exec_stmt

   24 expression_stmt: expression_list

   25 assert_stmt: ASSERT expression
   26            | ASSERT expression ',' expression

   27 assignment_stmt: assignment_stmt_targer_list expression_list
   28                | assignment_stmt_targer_list yield_expression

   29 assignment_stmt_targer_list: target_list '='
   30                            | assignment_stmt_targer_list target_list '='

   31 target_list: target
   32            | target_list ',' target
   33            | target_list ','

   34 target: identifier
   35       | '(' target_list ')'
   36       | '[' target_list ']'
   37       | attributeref
   38       | subscription
   39       | slicing

   40 augmented_assignment_stmt: target augop expression_list
   41                          | target augop yield_expression

   42 augop: RIGHT_ASSIGN
   43      | LEFT_ASSIGN
   44      | ADD_ASSIGN
   45      | SUB_ASSIGN
   46      | MUL_ASSIGN
   47      | POW_ASSIGN
   48      | DIV_ASSIGN
   49      | MOD_ASSIGN
   50      | AND_ASSIGN
   51      | XOR_ASSIGN
   52      | OR_ASSIGN
   53      | RIGHT_OP
   54      | LEFT_OP

   55 pass_stmt: PASS

   56 del_stmt: DEL target_list

   57 print_stmt: PRINT
   58           | PRINT expression
   59           | PRINT expression ','
   60           | PRINT expression expressions
   61           | PRINT expression expressions ','
   62           | PRINT RIGHT_OP expression
   63           | PRINT RIGHT_OP expression expressions
   64           | PRINT RIGHT_OP expression expressions ','

   65 expressions: ',' expression
   66            | expressions ',' expression

   67 return_stmt: RETURN
   68            | RETURN expression_list

   69 yield_stmt: yield_expression

   70 raise_stmt: RAISE
   71           | RAISE expression
   72           | RAISE expression ',' expression
   73           | RAISE expression ',' expression ',' expression

   74 break_stmt: BREAK

   75 continue_stmt: CONTINUE

   76 import_stmt: IMPORT module
   77            | IMPORT module AS name
   78            | IMPORT module modules
   79            | IMPORT module AS name modules
   80            | FROM relative_module IMPORT identifier
   81            | FROM relative_module IMPORT identifier AS name
   82            | FROM relative_module IMPORT identifier import_stmt_identifiers
   83            | FROM relative_module IMPORT identifier AS name import_stmt_identifiers
   84            | FROM relative_module IMPORT '(' identifier ')'
   85            | FROM relative_module IMPORT '(' identifier AS name ')'
   86            | FROM relative_module IMPORT '(' identifier import_stmt_identifiers ')'
   87            | FROM relative_module IMPORT '(' identifier AS name import_stmt_identifiers ')'
   88            | FROM relative_module IMPORT '(' identifier ',' ')'
   89            | FROM relative_module IMPORT '(' identifier AS name ',' ')'
   90            | FROM relative_module IMPORT '(' identifier import_stmt_identifiers ',' ')'
   91            | FROM relative_module IMPORT '(' identifier AS name import_stmt_identifiers ',' ')'
   92            | FROM module IMPORT '*'

   93 module: identifier
   94       | module '.' module

   95 relative_module: module
   96                | dot_modules
   97                | dots

   98 dot_modules: '.' module
   99            | dot_modules '.' module

  100 dots: '.'
  101     | dots '.'

  102 modules: ',' module
  103        | ',' module AS name
  104        | modules ',' module
  105        | modules ',' module AS name

  106 import_stmt_identifiers: ',' identifier
  107                        | ',' identifier AS name
  108                        | import_stmt_identifiers ',' identifier
  109                        | import_stmt_identifiers ',' identifier AS name

  110 name: identifier

  111 global_stmt: GLOBAL identifier
  112            | GLOBAL identifier global_stmt_extended

  113 global_stmt_extended: ',' identifier
  114                     | global_stmt_extended

  115 exec_stmt: EXEC or_expr
  116          | EXEC or_expr IN expression
  117          | EXEC or_expr IN expression ',' expression

  118 expression: "TODO"

  119 expression_list: "TODO"

  120 input: simple_stmt


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'(' (40) 35 84 85 86 87 88 89 90 91
')' (41) 35 84 85 86 87 88 89 90 91
'*' (42) 92
',' (44) 26 32 33 59 61 64 65 66 72 73 88 89 90 91 102 103 104 105
    106 107 108 109 113 117
'.' (46) 94 98 99 100 101
'=' (61) 29 30
'L' (76)
'[' (91) 36
']' (93) 36
'l' (108)
error (256)
FALSE (258)
NONE (259)
TRUE (260)
AND (261)
AS (262) 77 79 81 83 85 87 89 91 103 105 107 109
ASSERT (263) 25 26
BREAK (264) 74
CLASS (265)
CONTINUE (266) 75
DEF (267)
DEL (268) 56
ELIF (269)
ELSE (270)
EXCEPT (271)
FINALLY (272)
FOR (273)
FROM (274) 80 81 82 83 84 85 86 87 88 89 90 91 92
GLOBAL (275) 111 112
IF (276)
IMPORT (277) 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
IN (278) 116 117
IS (279)
LAMBDA (280)
NOT (281)
OR (282)
PASS (283) 55
RAISE (284) 70 71 72 73
RETURN (285) 67 68
TRY (286)
WHILE (287)
WITH (288)
YIELD (289) 3 4
PRINT (290) 57 58 59 60 61 62 63 64
EXEC (291) 115 116 117
IDENTIFIER (292) 2
SHORTSTRING (293)
LONGSTRING (294)
DECINTEGER (295)
OCTINTEGER (296)
HEXINTEGER (297)
POINTFLOAT (298)
EXPONENTFLOAT (299)
IMAGNUMBER (300)
ELLIPSIS (301)
RIGHT_ASSIGN (302) 42
LEFT_ASSIGN (303) 43
ADD_ASSIGN (304) 44
SUB_ASSIGN (305) 45
MUL_ASSIGN (306) 46
POW_ASSIGN (307) 47
DIV_ASSIGN (308) 48
MOD_ASSIGN (309) 49
AND_ASSIGN (310) 50
XOR_ASSIGN (311) 51
OR_ASSIGN (312) 52
RIGHT_OP (313) 53 62 63 64
LEFT_OP (314) 54
PTR_OP (315)
LE_OP (316)
GE_OP (317)
EQ_OP (318)
NE_OP (319)
NEWLINE (320)
"TODO" (321) 5 6 7 8 118 119


Нетерминальные символы с правилами, в которых они появляются

$accept (77)
    налево: 0
start (78)
    налево: 1, направо: 0
identifier (79)
    налево: 2, направо: 34 80 81 82 83 84 85 86 87 88 89 90 91 93 106
    107 108 109 110 111 112 113
yield_expression (80)
    налево: 3 4, направо: 28 41 69
attributeref (81)
    налево: 5, направо: 37
subscription (82)
    налево: 6, направо: 38
slicing (83)
    налево: 7, направо: 39
or_expr (84)
    налево: 8, направо: 115 116 117
simple_stmt (85)
    налево: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23, направо: 120
expression_stmt (86)
    налево: 24, направо: 9
assert_stmt (87)
    налево: 25 26, направо: 10
assignment_stmt (88)
    налево: 27 28, направо: 11
assignment_stmt_targer_list (89)
    налево: 29 30, направо: 27 28 30
target_list (90)
    налево: 31 32 33, направо: 29 30 32 33 35 36 56
target (91)
    налево: 34 35 36 37 38 39, направо: 31 32 40 41
augmented_assignment_stmt (92)
    налево: 40 41, направо: 12
augop (93)
    налево: 42 43 44 45 46 47 48 49 50 51 52 53 54, направо: 40 41
pass_stmt (94)
    налево: 55, направо: 13
del_stmt (95)
    налево: 56, направо: 14
print_stmt (96)
    налево: 57 58 59 60 61 62 63 64, направо: 15
expressions (97)
    налево: 65 66, направо: 60 61 63 64 66
return_stmt (98)
    налево: 67 68, направо: 16
yield_stmt (99)
    налево: 69, направо: 17
raise_stmt (100)
    налево: 70 71 72 73, направо: 18
break_stmt (101)
    налево: 74, направо: 19
continue_stmt (102)
    налево: 75, направо: 20
import_stmt (103)
    налево: 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92, направо:
    21
module (104)
    налево: 93 94, направо: 76 77 78 79 92 94 95 98 99 102 103 104
    105
relative_module (105)
    налево: 95 96 97, направо: 80 81 82 83 84 85 86 87 88 89 90 91
dot_modules (106)
    налево: 98 99, направо: 96 99
dots (107)
    налево: 100 101, направо: 97 101
modules (108)
    налево: 102 103 104 105, направо: 78 79 104 105
import_stmt_identifiers (109)
    налево: 106 107 108 109, направо: 82 83 86 87 90 91 108 109
name (110)
    налево: 110, направо: 77 79 81 83 85 87 89 91 103 105 107 109
global_stmt (111)
    налево: 111 112, направо: 22
global_stmt_extended (112)
    налево: 113 114, направо: 112 114
exec_stmt (113)
    налево: 115 116 117, направо: 23
expression (114)
    налево: 118, направо: 25 26 58 59 60 61 62 63 64 65 66 71 72 73
    116 117
expression_list (115)
    налево: 119, направо: 4 24 27 40 68
input (116)
    налево: 120, направо: 1


состояние 0

    0 $accept: . start $end

    ASSERT      сдвиг, и переход в состояние 1
    BREAK       сдвиг, и переход в состояние 2
    CONTINUE    сдвиг, и переход в состояние 3
    DEL         сдвиг, и переход в состояние 4
    FROM        сдвиг, и переход в состояние 5
    GLOBAL      сдвиг, и переход в состояние 6
    IMPORT      сдвиг, и переход в состояние 7
    PASS        сдвиг, и переход в состояние 8
    RAISE       сдвиг, и переход в состояние 9
    RETURN      сдвиг, и переход в состояние 10
    YIELD       сдвиг, и переход в состояние 11
    PRINT       сдвиг, и переход в состояние 12
    EXEC        сдвиг, и переход в состояние 13
    IDENTIFIER  сдвиг, и переход в состояние 14
    "TODO"      сдвиг, и переход в состояние 15
    '('         сдвиг, и переход в состояние 16
    '['         сдвиг, и переход в состояние 17

    start                        переход в состояние 18
    identifier                   переход в состояние 19
    yield_expression             переход в состояние 20
    attributeref                 переход в состояние 21
    subscription                 переход в состояние 22
    slicing                      переход в состояние 23
    simple_stmt                  переход в состояние 24
    expression_stmt              переход в состояние 25
    assert_stmt                  переход в состояние 26
    assignment_stmt              переход в состояние 27
    assignment_stmt_targer_list  переход в состояние 28
    target_list                  переход в состояние 29
    target                       переход в состояние 30
    augmented_assignment_stmt    переход в состояние 31
    pass_stmt                    переход в состояние 32
    del_stmt                     переход в состояние 33
    print_stmt                   переход в состояние 34
    return_stmt                  переход в состояние 35
    yield_stmt                   переход в состояние 36
    raise_stmt                   переход в состояние 37
    break_stmt                   переход в состояние 38
    continue_stmt                переход в состояние 39
    import_stmt                  переход в состояние 40
    global_stmt                  переход в состояние 41
    exec_stmt                    переход в состояние 42
    expression_list              переход в состояние 43
    input                        переход в состояние 44


состояние 1

   25 assert_stmt: ASSERT . expression
   26            | ASSERT . expression ',' expression

    "TODO"  сдвиг, и переход в состояние 45

    expression  переход в состояние 46


состояние 2

   74 break_stmt: BREAK .

    $default  вывод с использованием правила 74 (break_stmt)


состояние 3

   75 continue_stmt: CONTINUE .

    $default  вывод с использованием правила 75 (continue_stmt)


состояние 4

   56 del_stmt: DEL . target_list

    IDENTIFIER  сдвиг, и переход в состояние 14
    "TODO"      сдвиг, и переход в состояние 47
    '('         сдвиг, и переход в состояние 16
    '['         сдвиг, и переход в состояние 17

    identifier    переход в состояние 19
    attributeref  переход в состояние 21
    subscription  переход в состояние 22
    slicing       переход в состояние 23
    target_list   переход в состояние 48
    target        переход в состояние 49


состояние 5

   80 import_stmt: FROM . relative_module IMPORT identifier
   81            | FROM . relative_module IMPORT identifier AS name
   82            | FROM . relative_module IMPORT identifier import_stmt_identifiers
   83            | FROM . relative_module IMPORT identifier AS name import_stmt_identifiers
   84            | FROM . relative_module IMPORT '(' identifier ')'
   85            | FROM . relative_module IMPORT '(' identifier AS name ')'
   86            | FROM . relative_module IMPORT '(' identifier import_stmt_identifiers ')'
   87            | FROM . relative_module IMPORT '(' identifier AS name import_stmt_identifiers ')'
   88            | FROM . relative_module IMPORT '(' identifier ',' ')'
   89            | FROM . relative_module IMPORT '(' identifier AS name ',' ')'
   90            | FROM . relative_module IMPORT '(' identifier import_stmt_identifiers ',' ')'
   91            | FROM . relative_module IMPORT '(' identifier AS name import_stmt_identifiers ',' ')'
   92            | FROM . module IMPORT '*'

    IDENTIFIER  сдвиг, и переход в состояние 14
    '.'         сдвиг, и переход в состояние 50

    identifier       переход в состояние 51
    module           переход в состояние 52
    relative_module  переход в состояние 53
    dot_modules      переход в состояние 54
    dots             переход в состояние 55


состояние 6

  111 global_stmt: GLOBAL . identifier
  112            | GLOBAL . identifier global_stmt_extended

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 56


состояние 7

   76 import_stmt: IMPORT . module
   77            | IMPORT . module AS name
   78            | IMPORT . module modules
   79            | IMPORT . module AS name modules

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 51
    module      переход в состояние 57


состояние 8

   55 pass_stmt: PASS .

    $default  вывод с использованием правила 55 (pass_stmt)


состояние 9

   70 raise_stmt: RAISE .
   71           | RAISE . expression
   72           | RAISE . expression ',' expression
   73           | RAISE . expression ',' expression ',' expression

    "TODO"  сдвиг, и переход в состояние 45

    $default  вывод с использованием правила 70 (raise_stmt)

    expression  переход в состояние 58


состояние 10

   67 return_stmt: RETURN .
   68            | RETURN . expression_list

    "TODO"  сдвиг, и переход в состояние 59

    $default  вывод с использованием правила 67 (return_stmt)

    expression_list  переход в состояние 60


состояние 11

    3 yield_expression: YIELD .
    4                 | YIELD . expression_list

    "TODO"  сдвиг, и переход в состояние 59

    $default  вывод с использованием правила 3 (yield_expression)

    expression_list  переход в состояние 61


состояние 12

   57 print_stmt: PRINT .
   58           | PRINT . expression
   59           | PRINT . expression ','
   60           | PRINT . expression expressions
   61           | PRINT . expression expressions ','
   62           | PRINT . RIGHT_OP expression
   63           | PRINT . RIGHT_OP expression expressions
   64           | PRINT . RIGHT_OP expression expressions ','

    RIGHT_OP  сдвиг, и переход в состояние 62
    "TODO"    сдвиг, и переход в состояние 45

    $default  вывод с использованием правила 57 (print_stmt)

    expression  переход в состояние 63


состояние 13

  115 exec_stmt: EXEC . or_expr
  116          | EXEC . or_expr IN expression
  117          | EXEC . or_expr IN expression ',' expression

    "TODO"  сдвиг, и переход в состояние 64

    or_expr  переход в состояние 65


состояние 14

    2 identifier: IDENTIFIER .

    $default  вывод с использованием правила 2 (identifier)


состояние 15

    5 attributeref: "TODO" .
    6 subscription: "TODO" .
    7 slicing: "TODO" .
  119 expression_list: "TODO" .

    $end          вывод с использованием правила 119 (expression_list)
    RIGHT_ASSIGN  вывод с использованием правила 5 (attributeref)
    RIGHT_ASSIGN  [вывод с использованием правила 6 (subscription)]
    RIGHT_ASSIGN  [вывод с использованием правила 7 (slicing)]
    LEFT_ASSIGN   вывод с использованием правила 5 (attributeref)
    LEFT_ASSIGN   [вывод с использованием правила 6 (subscription)]
    LEFT_ASSIGN   [вывод с использованием правила 7 (slicing)]
    ADD_ASSIGN    вывод с использованием правила 5 (attributeref)
    ADD_ASSIGN    [вывод с использованием правила 6 (subscription)]
    ADD_ASSIGN    [вывод с использованием правила 7 (slicing)]
    SUB_ASSIGN    вывод с использованием правила 5 (attributeref)
    SUB_ASSIGN    [вывод с использованием правила 6 (subscription)]
    SUB_ASSIGN    [вывод с использованием правила 7 (slicing)]
    MUL_ASSIGN    вывод с использованием правила 5 (attributeref)
    MUL_ASSIGN    [вывод с использованием правила 6 (subscription)]
    MUL_ASSIGN    [вывод с использованием правила 7 (slicing)]
    POW_ASSIGN    вывод с использованием правила 5 (attributeref)
    POW_ASSIGN    [вывод с использованием правила 6 (subscription)]
    POW_ASSIGN    [вывод с использованием правила 7 (slicing)]
    DIV_ASSIGN    вывод с использованием правила 5 (attributeref)
    DIV_ASSIGN    [вывод с использованием правила 6 (subscription)]
    DIV_ASSIGN    [вывод с использованием правила 7 (slicing)]
    MOD_ASSIGN    вывод с использованием правила 5 (attributeref)
    MOD_ASSIGN    [вывод с использованием правила 6 (subscription)]
    MOD_ASSIGN    [вывод с использованием правила 7 (slicing)]
    AND_ASSIGN    вывод с использованием правила 5 (attributeref)
    AND_ASSIGN    [вывод с использованием правила 6 (subscription)]
    AND_ASSIGN    [вывод с использованием правила 7 (slicing)]
    XOR_ASSIGN    вывод с использованием правила 5 (attributeref)
    XOR_ASSIGN    [вывод с использованием правила 6 (subscription)]
    XOR_ASSIGN    [вывод с использованием правила 7 (slicing)]
    OR_ASSIGN     вывод с использованием правила 5 (attributeref)
    OR_ASSIGN     [вывод с использованием правила 6 (subscription)]
    OR_ASSIGN     [вывод с использованием правила 7 (slicing)]
    RIGHT_OP      вывод с использованием правила 5 (attributeref)
    RIGHT_OP      [вывод с использованием правила 6 (subscription)]
    RIGHT_OP      [вывод с использованием правила 7 (slicing)]
    LEFT_OP       вывод с использованием правила 5 (attributeref)
    LEFT_OP       [вывод с использованием правила 6 (subscription)]
    LEFT_OP       [вывод с использованием правила 7 (slicing)]
    ','           вывод с использованием правила 5 (attributeref)
    ','           [вывод с использованием правила 6 (subscription)]
    ','           [вывод с использованием правила 7 (slicing)]
    '='           вывод с использованием правила 5 (attributeref)
    '='           [вывод с использованием правила 6 (subscription)]
    '='           [вывод с использованием правила 7 (slicing)]
    $default      вывод с использованием правила 5 (attributeref)


состояние 16

   35 target: '(' . target_list ')'

    IDENTIFIER  сдвиг, и переход в состояние 14
    "TODO"      сдвиг, и переход в состояние 47
    '('         сдвиг, и переход в состояние 16
    '['         сдвиг, и переход в состояние 17

    identifier    переход в состояние 19
    attributeref  переход в состояние 21
    subscription  переход в состояние 22
    slicing       переход в состояние 23
    target_list   переход в состояние 66
    target        переход в состояние 49


состояние 17

   36 target: '[' . target_list ']'

    IDENTIFIER  сдвиг, и переход в состояние 14
    "TODO"      сдвиг, и переход в состояние 47
    '('         сдвиг, и переход в состояние 16
    '['         сдвиг, и переход в состояние 17

    identifier    переход в состояние 19
    attributeref  переход в состояние 21
    subscription  переход в состояние 22
    slicing       переход в состояние 23
    target_list   переход в состояние 67
    target        переход в состояние 49


состояние 18

    0 $accept: start . $end

    $end  сдвиг, и переход в состояние 68


состояние 19

   34 target: identifier .

    $default  вывод с использованием правила 34 (target)


состояние 20

   69 yield_stmt: yield_expression .

    $default  вывод с использованием правила 69 (yield_stmt)


состояние 21

   37 target: attributeref .

    $default  вывод с использованием правила 37 (target)


состояние 22

   38 target: subscription .

    $default  вывод с использованием правила 38 (target)


состояние 23

   39 target: slicing .

    $default  вывод с использованием правила 39 (target)


состояние 24

  120 input: simple_stmt .

    $default  вывод с использованием правила 120 (input)


состояние 25

    9 simple_stmt: expression_stmt .

    $default  вывод с использованием правила 9 (simple_stmt)


состояние 26

   10 simple_stmt: assert_stmt .

    $default  вывод с использованием правила 10 (simple_stmt)


состояние 27

   11 simple_stmt: assignment_stmt .

    $default  вывод с использованием правила 11 (simple_stmt)


состояние 28

   27 assignment_stmt: assignment_stmt_targer_list . expression_list
   28                | assignment_stmt_targer_list . yield_expression
   30 assignment_stmt_targer_list: assignment_stmt_targer_list . target_list '='

    YIELD       сдвиг, и переход в состояние 11
    IDENTIFIER  сдвиг, и переход в состояние 14
    "TODO"      сдвиг, и переход в состояние 15
    '('         сдвиг, и переход в состояние 16
    '['         сдвиг, и переход в состояние 17

    identifier        переход в состояние 19
    yield_expression  переход в состояние 69
    attributeref      переход в состояние 21
    subscription      переход в состояние 22
    slicing           переход в состояние 23
    target_list       переход в состояние 70
    target            переход в состояние 49
    expression_list   переход в состояние 71


состояние 29

   29 assignment_stmt_targer_list: target_list . '='
   32 target_list: target_list . ',' target
   33            | target_list . ','

    ','  сдвиг, и переход в состояние 72
    '='  сдвиг, и переход в состояние 73


состояние 30

   31 target_list: target .
   40 augmented_assignment_stmt: target . augop expression_list
   41                          | target . augop yield_expression

    RIGHT_ASSIGN  сдвиг, и переход в состояние 74
    LEFT_ASSIGN   сдвиг, и переход в состояние 75
    ADD_ASSIGN    сдвиг, и переход в состояние 76
    SUB_ASSIGN    сдвиг, и переход в состояние 77
    MUL_ASSIGN    сдвиг, и переход в состояние 78
    POW_ASSIGN    сдвиг, и переход в состояние 79
    DIV_ASSIGN    сдвиг, и переход в состояние 80
    MOD_ASSIGN    сдвиг, и переход в состояние 81
    AND_ASSIGN    сдвиг, и переход в состояние 82
    XOR_ASSIGN    сдвиг, и переход в состояние 83
    OR_ASSIGN     сдвиг, и переход в состояние 84
    RIGHT_OP      сдвиг, и переход в состояние 85
    LEFT_OP       сдвиг, и переход в состояние 86

    $default  вывод с использованием правила 31 (target_list)

    augop  переход в состояние 87


состояние 31

   12 simple_stmt: augmented_assignment_stmt .

    $default  вывод с использованием правила 12 (simple_stmt)


состояние 32

   13 simple_stmt: pass_stmt .

    $default  вывод с использованием правила 13 (simple_stmt)


состояние 33

   14 simple_stmt: del_stmt .

    $default  вывод с использованием правила 14 (simple_stmt)


состояние 34

   15 simple_stmt: print_stmt .

    $default  вывод с использованием правила 15 (simple_stmt)


состояние 35

   16 simple_stmt: return_stmt .

    $default  вывод с использованием правила 16 (simple_stmt)


состояние 36

   17 simple_stmt: yield_stmt .

    $default  вывод с использованием правила 17 (simple_stmt)


состояние 37

   18 simple_stmt: raise_stmt .

    $default  вывод с использованием правила 18 (simple_stmt)


состояние 38

   19 simple_stmt: break_stmt .

    $default  вывод с использованием правила 19 (simple_stmt)


состояние 39

   20 simple_stmt: continue_stmt .

    $default  вывод с использованием правила 20 (simple_stmt)


состояние 40

   21 simple_stmt: import_stmt .

    $default  вывод с использованием правила 21 (simple_stmt)


состояние 41

   22 simple_stmt: global_stmt .

    $default  вывод с использованием правила 22 (simple_stmt)


состояние 42

   23 simple_stmt: exec_stmt .

    $default  вывод с использованием правила 23 (simple_stmt)


состояние 43

   24 expression_stmt: expression_list .

    $default  вывод с использованием правила 24 (expression_stmt)


состояние 44

    1 start: input .

    $default  вывод с использованием правила 1 (start)


состояние 45

  118 expression: "TODO" .

    $default  вывод с использованием правила 118 (expression)


состояние 46

   25 assert_stmt: ASSERT expression .
   26            | ASSERT expression . ',' expression

    ','  сдвиг, и переход в состояние 88

    $default  вывод с использованием правила 25 (assert_stmt)


состояние 47

    5 attributeref: "TODO" .
    6 subscription: "TODO" .
    7 slicing: "TODO" .

    $end      вывод с использованием правила 5 (attributeref)
    $end      [вывод с использованием правила 6 (subscription)]
    $end      [вывод с использованием правила 7 (slicing)]
    ','       вывод с использованием правила 5 (attributeref)
    ','       [вывод с использованием правила 6 (subscription)]
    ','       [вывод с использованием правила 7 (slicing)]
    '='       вывод с использованием правила 5 (attributeref)
    '='       [вывод с использованием правила 6 (subscription)]
    '='       [вывод с использованием правила 7 (slicing)]
    ')'       вывод с использованием правила 5 (attributeref)
    ')'       [вывод с использованием правила 6 (subscription)]
    ')'       [вывод с использованием правила 7 (slicing)]
    ']'       вывод с использованием правила 5 (attributeref)
    ']'       [вывод с использованием правила 6 (subscription)]
    ']'       [вывод с использованием правила 7 (slicing)]
    $default  вывод с использованием правила 5 (attributeref)


состояние 48

   32 target_list: target_list . ',' target
   33            | target_list . ','
   56 del_stmt: DEL target_list .

    ','  сдвиг, и переход в состояние 72

    $default  вывод с использованием правила 56 (del_stmt)


состояние 49

   31 target_list: target .

    $default  вывод с использованием правила 31 (target_list)


состояние 50

   98 dot_modules: '.' . module
  100 dots: '.' .

    IDENTIFIER  сдвиг, и переход в состояние 14

    $default  вывод с использованием правила 100 (dots)

    identifier  переход в состояние 51
    module      переход в состояние 89


состояние 51

   93 module: identifier .

    $default  вывод с использованием правила 93 (module)


состояние 52

   92 import_stmt: FROM module . IMPORT '*'
   94 module: module . '.' module
   95 relative_module: module .

    IMPORT  сдвиг, и переход в состояние 90
    '.'     сдвиг, и переход в состояние 91

    IMPORT  [вывод с использованием правила 95 (relative_module)]


состояние 53

   80 import_stmt: FROM relative_module . IMPORT identifier
   81            | FROM relative_module . IMPORT identifier AS name
   82            | FROM relative_module . IMPORT identifier import_stmt_identifiers
   83            | FROM relative_module . IMPORT identifier AS name import_stmt_identifiers
   84            | FROM relative_module . IMPORT '(' identifier ')'
   85            | FROM relative_module . IMPORT '(' identifier AS name ')'
   86            | FROM relative_module . IMPORT '(' identifier import_stmt_identifiers ')'
   87            | FROM relative_module . IMPORT '(' identifier AS name import_stmt_identifiers ')'
   88            | FROM relative_module . IMPORT '(' identifier ',' ')'
   89            | FROM relative_module . IMPORT '(' identifier AS name ',' ')'
   90            | FROM relative_module . IMPORT '(' identifier import_stmt_identifiers ',' ')'
   91            | FROM relative_module . IMPORT '(' identifier AS name import_stmt_identifiers ',' ')'

    IMPORT  сдвиг, и переход в состояние 92


состояние 54

   96 relative_module: dot_modules .
   99 dot_modules: dot_modules . '.' module

    '.'  сдвиг, и переход в состояние 93

    $default  вывод с использованием правила 96 (relative_module)


состояние 55

   97 relative_module: dots .
  101 dots: dots . '.'

    '.'  сдвиг, и переход в состояние 94

    $default  вывод с использованием правила 97 (relative_module)


состояние 56

  111 global_stmt: GLOBAL identifier .
  112            | GLOBAL identifier . global_stmt_extended

    ','  сдвиг, и переход в состояние 95

    $default  вывод с использованием правила 111 (global_stmt)

    global_stmt_extended  переход в состояние 96


состояние 57

   76 import_stmt: IMPORT module .
   77            | IMPORT module . AS name
   78            | IMPORT module . modules
   79            | IMPORT module . AS name modules
   94 module: module . '.' module

    AS   сдвиг, и переход в состояние 97
    ','  сдвиг, и переход в состояние 98
    '.'  сдвиг, и переход в состояние 91

    $default  вывод с использованием правила 76 (import_stmt)

    modules  переход в состояние 99


состояние 58

   71 raise_stmt: RAISE expression .
   72           | RAISE expression . ',' expression
   73           | RAISE expression . ',' expression ',' expression

    ','  сдвиг, и переход в состояние 100

    $default  вывод с использованием правила 71 (raise_stmt)


состояние 59

  119 expression_list: "TODO" .

    $default  вывод с использованием правила 119 (expression_list)


состояние 60

   68 return_stmt: RETURN expression_list .

    $default  вывод с использованием правила 68 (return_stmt)


состояние 61

    4 yield_expression: YIELD expression_list .

    $default  вывод с использованием правила 4 (yield_expression)


состояние 62

   62 print_stmt: PRINT RIGHT_OP . expression
   63           | PRINT RIGHT_OP . expression expressions
   64           | PRINT RIGHT_OP . expression expressions ','

    "TODO"  сдвиг, и переход в состояние 45

    expression  переход в состояние 101


состояние 63

   58 print_stmt: PRINT expression .
   59           | PRINT expression . ','
   60           | PRINT expression . expressions
   61           | PRINT expression . expressions ','

    ','  сдвиг, и переход в состояние 102

    $default  вывод с использованием правила 58 (print_stmt)

    expressions  переход в состояние 103


состояние 64

    8 or_expr: "TODO" .

    $default  вывод с использованием правила 8 (or_expr)


состояние 65

  115 exec_stmt: EXEC or_expr .
  116          | EXEC or_expr . IN expression
  117          | EXEC or_expr . IN expression ',' expression

    IN  сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 115 (exec_stmt)


состояние 66

   32 target_list: target_list . ',' target
   33            | target_list . ','
   35 target: '(' target_list . ')'

    ','  сдвиг, и переход в состояние 72
    ')'  сдвиг, и переход в состояние 105


состояние 67

   32 target_list: target_list . ',' target
   33            | target_list . ','
   36 target: '[' target_list . ']'

    ','  сдвиг, и переход в состояние 72
    ']'  сдвиг, и переход в состояние 106


состояние 68

    0 $accept: start $end .

    $default  accept


состояние 69

   28 assignment_stmt: assignment_stmt_targer_list yield_expression .

    $default  вывод с использованием правила 28 (assignment_stmt)


состояние 70

   30 assignment_stmt_targer_list: assignment_stmt_targer_list target_list . '='
   32 target_list: target_list . ',' target
   33            | target_list . ','

    ','  сдвиг, и переход в состояние 72
    '='  сдвиг, и переход в состояние 107


состояние 71

   27 assignment_stmt: assignment_stmt_targer_list expression_list .

    $default  вывод с использованием правила 27 (assignment_stmt)


состояние 72

   32 target_list: target_list ',' . target
   33            | target_list ',' .

    IDENTIFIER  сдвиг, и переход в состояние 14
    "TODO"      сдвиг, и переход в состояние 47
    '('         сдвиг, и переход в состояние 16
    '['         сдвиг, и переход в состояние 17

    $default  вывод с использованием правила 33 (target_list)

    identifier    переход в состояние 19
    attributeref  переход в состояние 21
    subscription  переход в состояние 22
    slicing       переход в состояние 23
    target        переход в состояние 108


состояние 73

   29 assignment_stmt_targer_list: target_list '=' .

    $default  вывод с использованием правила 29 (assignment_stmt_targer_list)


состояние 74

   42 augop: RIGHT_ASSIGN .

    $default  вывод с использованием правила 42 (augop)


состояние 75

   43 augop: LEFT_ASSIGN .

    $default  вывод с использованием правила 43 (augop)


состояние 76

   44 augop: ADD_ASSIGN .

    $default  вывод с использованием правила 44 (augop)


состояние 77

   45 augop: SUB_ASSIGN .

    $default  вывод с использованием правила 45 (augop)


состояние 78

   46 augop: MUL_ASSIGN .

    $default  вывод с использованием правила 46 (augop)


состояние 79

   47 augop: POW_ASSIGN .

    $default  вывод с использованием правила 47 (augop)


состояние 80

   48 augop: DIV_ASSIGN .

    $default  вывод с использованием правила 48 (augop)


состояние 81

   49 augop: MOD_ASSIGN .

    $default  вывод с использованием правила 49 (augop)


состояние 82

   50 augop: AND_ASSIGN .

    $default  вывод с использованием правила 50 (augop)


состояние 83

   51 augop: XOR_ASSIGN .

    $default  вывод с использованием правила 51 (augop)


состояние 84

   52 augop: OR_ASSIGN .

    $default  вывод с использованием правила 52 (augop)


состояние 85

   53 augop: RIGHT_OP .

    $default  вывод с использованием правила 53 (augop)


состояние 86

   54 augop: LEFT_OP .

    $default  вывод с использованием правила 54 (augop)


состояние 87

   40 augmented_assignment_stmt: target augop . expression_list
   41                          | target augop . yield_expression

    YIELD   сдвиг, и переход в состояние 11
    "TODO"  сдвиг, и переход в состояние 59

    yield_expression  переход в состояние 109
    expression_list   переход в состояние 110


состояние 88

   26 assert_stmt: ASSERT expression ',' . expression

    "TODO"  сдвиг, и переход в состояние 45

    expression  переход в состояние 111


состояние 89

   94 module: module . '.' module
   98 dot_modules: '.' module .

    '.'  сдвиг, и переход в состояние 91

    '.'       [вывод с использованием правила 98 (dot_modules)]
    $default  вывод с использованием правила 98 (dot_modules)


состояние 90

   92 import_stmt: FROM module IMPORT . '*'

    '*'  сдвиг, и переход в состояние 112


состояние 91

   94 module: module '.' . module

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 51
    module      переход в состояние 113


состояние 92

   80 import_stmt: FROM relative_module IMPORT . identifier
   81            | FROM relative_module IMPORT . identifier AS name
   82            | FROM relative_module IMPORT . identifier import_stmt_identifiers
   83            | FROM relative_module IMPORT . identifier AS name import_stmt_identifiers
   84            | FROM relative_module IMPORT . '(' identifier ')'
   85            | FROM relative_module IMPORT . '(' identifier AS name ')'
   86            | FROM relative_module IMPORT . '(' identifier import_stmt_identifiers ')'
   87            | FROM relative_module IMPORT . '(' identifier AS name import_stmt_identifiers ')'
   88            | FROM relative_module IMPORT . '(' identifier ',' ')'
   89            | FROM relative_module IMPORT . '(' identifier AS name ',' ')'
   90            | FROM relative_module IMPORT . '(' identifier import_stmt_identifiers ',' ')'
   91            | FROM relative_module IMPORT . '(' identifier AS name import_stmt_identifiers ',' ')'

    IDENTIFIER  сдвиг, и переход в состояние 14
    '('         сдвиг, и переход в состояние 114

    identifier  переход в состояние 115


состояние 93

   99 dot_modules: dot_modules '.' . module

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 51
    module      переход в состояние 116


состояние 94

  101 dots: dots '.' .

    $default  вывод с использованием правила 101 (dots)


состояние 95

  113 global_stmt_extended: ',' . identifier

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 117


состояние 96

  112 global_stmt: GLOBAL identifier global_stmt_extended .
  114 global_stmt_extended: global_stmt_extended .

    $end      вывод с использованием правила 112 (global_stmt)
    $end      [вывод с использованием правила 114 (global_stmt_extended)]
    $default  вывод с использованием правила 112 (global_stmt)


состояние 97

   77 import_stmt: IMPORT module AS . name
   79            | IMPORT module AS . name modules

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 118
    name        переход в состояние 119


состояние 98

  102 modules: ',' . module
  103        | ',' . module AS name

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 51
    module      переход в состояние 120


состояние 99

   78 import_stmt: IMPORT module modules .
  104 modules: modules . ',' module
  105        | modules . ',' module AS name

    ','  сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 78 (import_stmt)


состояние 100

   72 raise_stmt: RAISE expression ',' . expression
   73           | RAISE expression ',' . expression ',' expression

    "TODO"  сдвиг, и переход в состояние 45

    expression  переход в состояние 122


состояние 101

   62 print_stmt: PRINT RIGHT_OP expression .
   63           | PRINT RIGHT_OP expression . expressions
   64           | PRINT RIGHT_OP expression . expressions ','

    ','  сдвиг, и переход в состояние 123

    $default  вывод с использованием правила 62 (print_stmt)

    expressions  переход в состояние 124


состояние 102

   59 print_stmt: PRINT expression ',' .
   65 expressions: ',' . expression

    "TODO"  сдвиг, и переход в состояние 45

    $default  вывод с использованием правила 59 (print_stmt)

    expression  переход в состояние 125


состояние 103

   60 print_stmt: PRINT expression expressions .
   61           | PRINT expression expressions . ','
   66 expressions: expressions . ',' expression

    ','  сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 60 (print_stmt)


состояние 104

  116 exec_stmt: EXEC or_expr IN . expression
  117          | EXEC or_expr IN . expression ',' expression

    "TODO"  сдвиг, и переход в состояние 45

    expression  переход в состояние 127


состояние 105

   35 target: '(' target_list ')' .

    $default  вывод с использованием правила 35 (target)


состояние 106

   36 target: '[' target_list ']' .

    $default  вывод с использованием правила 36 (target)


состояние 107

   30 assignment_stmt_targer_list: assignment_stmt_targer_list target_list '=' .

    $default  вывод с использованием правила 30 (assignment_stmt_targer_list)


состояние 108

   32 target_list: target_list ',' target .

    $default  вывод с использованием правила 32 (target_list)


состояние 109

   41 augmented_assignment_stmt: target augop yield_expression .

    $default  вывод с использованием правила 41 (augmented_assignment_stmt)


состояние 110

   40 augmented_assignment_stmt: target augop expression_list .

    $default  вывод с использованием правила 40 (augmented_assignment_stmt)


состояние 111

   26 assert_stmt: ASSERT expression ',' expression .

    $default  вывод с использованием правила 26 (assert_stmt)


состояние 112

   92 import_stmt: FROM module IMPORT '*' .

    $default  вывод с использованием правила 92 (import_stmt)


состояние 113

   94 module: module . '.' module
   94       | module '.' module .

    '.'  сдвиг, и переход в состояние 91

    '.'       [вывод с использованием правила 94 (module)]
    $default  вывод с использованием правила 94 (module)


состояние 114

   84 import_stmt: FROM relative_module IMPORT '(' . identifier ')'
   85            | FROM relative_module IMPORT '(' . identifier AS name ')'
   86            | FROM relative_module IMPORT '(' . identifier import_stmt_identifiers ')'
   87            | FROM relative_module IMPORT '(' . identifier AS name import_stmt_identifiers ')'
   88            | FROM relative_module IMPORT '(' . identifier ',' ')'
   89            | FROM relative_module IMPORT '(' . identifier AS name ',' ')'
   90            | FROM relative_module IMPORT '(' . identifier import_stmt_identifiers ',' ')'
   91            | FROM relative_module IMPORT '(' . identifier AS name import_stmt_identifiers ',' ')'

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 128


состояние 115

   80 import_stmt: FROM relative_module IMPORT identifier .
   81            | FROM relative_module IMPORT identifier . AS name
   82            | FROM relative_module IMPORT identifier . import_stmt_identifiers
   83            | FROM relative_module IMPORT identifier . AS name import_stmt_identifiers

    AS   сдвиг, и переход в состояние 129
    ','  сдвиг, и переход в состояние 130

    $default  вывод с использованием правила 80 (import_stmt)

    import_stmt_identifiers  переход в состояние 131


состояние 116

   94 module: module . '.' module
   99 dot_modules: dot_modules '.' module .

    '.'  сдвиг, и переход в состояние 91

    '.'       [вывод с использованием правила 99 (dot_modules)]
    $default  вывод с использованием правила 99 (dot_modules)


состояние 117

  113 global_stmt_extended: ',' identifier .

    $default  вывод с использованием правила 113 (global_stmt_extended)


состояние 118

  110 name: identifier .

    $default  вывод с использованием правила 110 (name)


состояние 119

   77 import_stmt: IMPORT module AS name .
   79            | IMPORT module AS name . modules

    ','  сдвиг, и переход в состояние 98

    $default  вывод с использованием правила 77 (import_stmt)

    modules  переход в состояние 132


состояние 120

   94 module: module . '.' module
  102 modules: ',' module .
  103        | ',' module . AS name

    AS   сдвиг, и переход в состояние 133
    '.'  сдвиг, и переход в состояние 91

    $default  вывод с использованием правила 102 (modules)


состояние 121

  104 modules: modules ',' . module
  105        | modules ',' . module AS name

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 51
    module      переход в состояние 134


состояние 122

   72 raise_stmt: RAISE expression ',' expression .
   73           | RAISE expression ',' expression . ',' expression

    ','  сдвиг, и переход в состояние 135

    $default  вывод с использованием правила 72 (raise_stmt)


состояние 123

   65 expressions: ',' . expression

    "TODO"  сдвиг, и переход в состояние 45

    expression  переход в состояние 125


состояние 124

   63 print_stmt: PRINT RIGHT_OP expression expressions .
   64           | PRINT RIGHT_OP expression expressions . ','
   66 expressions: expressions . ',' expression

    ','  сдвиг, и переход в состояние 136

    $default  вывод с использованием правила 63 (print_stmt)


состояние 125

   65 expressions: ',' expression .

    $default  вывод с использованием правила 65 (expressions)


состояние 126

   61 print_stmt: PRINT expression expressions ',' .
   66 expressions: expressions ',' . expression

    "TODO"  сдвиг, и переход в состояние 45

    $default  вывод с использованием правила 61 (print_stmt)

    expression  переход в состояние 137


состояние 127

  116 exec_stmt: EXEC or_expr IN expression .
  117          | EXEC or_expr IN expression . ',' expression

    ','  сдвиг, и переход в состояние 138

    $default  вывод с использованием правила 116 (exec_stmt)


состояние 128

   84 import_stmt: FROM relative_module IMPORT '(' identifier . ')'
   85            | FROM relative_module IMPORT '(' identifier . AS name ')'
   86            | FROM relative_module IMPORT '(' identifier . import_stmt_identifiers ')'
   87            | FROM relative_module IMPORT '(' identifier . AS name import_stmt_identifiers ')'
   88            | FROM relative_module IMPORT '(' identifier . ',' ')'
   89            | FROM relative_module IMPORT '(' identifier . AS name ',' ')'
   90            | FROM relative_module IMPORT '(' identifier . import_stmt_identifiers ',' ')'
   91            | FROM relative_module IMPORT '(' identifier . AS name import_stmt_identifiers ',' ')'

    AS   сдвиг, и переход в состояние 139
    ','  сдвиг, и переход в состояние 140
    ')'  сдвиг, и переход в состояние 141

    import_stmt_identifiers  переход в состояние 142


состояние 129

   81 import_stmt: FROM relative_module IMPORT identifier AS . name
   83            | FROM relative_module IMPORT identifier AS . name import_stmt_identifiers

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 118
    name        переход в состояние 143


состояние 130

  106 import_stmt_identifiers: ',' . identifier
  107                        | ',' . identifier AS name

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 144


состояние 131

   82 import_stmt: FROM relative_module IMPORT identifier import_stmt_identifiers .
  108 import_stmt_identifiers: import_stmt_identifiers . ',' identifier
  109                        | import_stmt_identifiers . ',' identifier AS name

    ','  сдвиг, и переход в состояние 145

    $default  вывод с использованием правила 82 (import_stmt)


состояние 132

   79 import_stmt: IMPORT module AS name modules .
  104 modules: modules . ',' module
  105        | modules . ',' module AS name

    ','  сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 79 (import_stmt)


состояние 133

  103 modules: ',' module AS . name

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 118
    name        переход в состояние 146


состояние 134

   94 module: module . '.' module
  104 modules: modules ',' module .
  105        | modules ',' module . AS name

    AS   сдвиг, и переход в состояние 147
    '.'  сдвиг, и переход в состояние 91

    $default  вывод с использованием правила 104 (modules)


состояние 135

   73 raise_stmt: RAISE expression ',' expression ',' . expression

    "TODO"  сдвиг, и переход в состояние 45

    expression  переход в состояние 148


состояние 136

   64 print_stmt: PRINT RIGHT_OP expression expressions ',' .
   66 expressions: expressions ',' . expression

    "TODO"  сдвиг, и переход в состояние 45

    $default  вывод с использованием правила 64 (print_stmt)

    expression  переход в состояние 137


состояние 137

   66 expressions: expressions ',' expression .

    $default  вывод с использованием правила 66 (expressions)


состояние 138

  117 exec_stmt: EXEC or_expr IN expression ',' . expression

    "TODO"  сдвиг, и переход в состояние 45

    expression  переход в состояние 149


состояние 139

   85 import_stmt: FROM relative_module IMPORT '(' identifier AS . name ')'
   87            | FROM relative_module IMPORT '(' identifier AS . name import_stmt_identifiers ')'
   89            | FROM relative_module IMPORT '(' identifier AS . name ',' ')'
   91            | FROM relative_module IMPORT '(' identifier AS . name import_stmt_identifiers ',' ')'

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 118
    name        переход в состояние 150


состояние 140

   88 import_stmt: FROM relative_module IMPORT '(' identifier ',' . ')'
  106 import_stmt_identifiers: ',' . identifier
  107                        | ',' . identifier AS name

    IDENTIFIER  сдвиг, и переход в состояние 14
    ')'         сдвиг, и переход в состояние 151

    identifier  переход в состояние 144


состояние 141

   84 import_stmt: FROM relative_module IMPORT '(' identifier ')' .

    $default  вывод с использованием правила 84 (import_stmt)


состояние 142

   86 import_stmt: FROM relative_module IMPORT '(' identifier import_stmt_identifiers . ')'
   90            | FROM relative_module IMPORT '(' identifier import_stmt_identifiers . ',' ')'
  108 import_stmt_identifiers: import_stmt_identifiers . ',' identifier
  109                        | import_stmt_identifiers . ',' identifier AS name

    ','  сдвиг, и переход в состояние 152
    ')'  сдвиг, и переход в состояние 153


состояние 143

   81 import_stmt: FROM relative_module IMPORT identifier AS name .
   83            | FROM relative_module IMPORT identifier AS name . import_stmt_identifiers

    ','  сдвиг, и переход в состояние 130

    $default  вывод с использованием правила 81 (import_stmt)

    import_stmt_identifiers  переход в состояние 154


состояние 144

  106 import_stmt_identifiers: ',' identifier .
  107                        | ',' identifier . AS name

    AS  сдвиг, и переход в состояние 155

    $default  вывод с использованием правила 106 (import_stmt_identifiers)


состояние 145

  108 import_stmt_identifiers: import_stmt_identifiers ',' . identifier
  109                        | import_stmt_identifiers ',' . identifier AS name

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 156


состояние 146

  103 modules: ',' module AS name .

    $default  вывод с использованием правила 103 (modules)


состояние 147

  105 modules: modules ',' module AS . name

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 118
    name        переход в состояние 157


состояние 148

   73 raise_stmt: RAISE expression ',' expression ',' expression .

    $default  вывод с использованием правила 73 (raise_stmt)


состояние 149

  117 exec_stmt: EXEC or_expr IN expression ',' expression .

    $default  вывод с использованием правила 117 (exec_stmt)


состояние 150

   85 import_stmt: FROM relative_module IMPORT '(' identifier AS name . ')'
   87            | FROM relative_module IMPORT '(' identifier AS name . import_stmt_identifiers ')'
   89            | FROM relative_module IMPORT '(' identifier AS name . ',' ')'
   91            | FROM relative_module IMPORT '(' identifier AS name . import_stmt_identifiers ',' ')'

    ','  сдвиг, и переход в состояние 158
    ')'  сдвиг, и переход в состояние 159

    import_stmt_identifiers  переход в состояние 160


состояние 151

   88 import_stmt: FROM relative_module IMPORT '(' identifier ',' ')' .

    $default  вывод с использованием правила 88 (import_stmt)


состояние 152

   90 import_stmt: FROM relative_module IMPORT '(' identifier import_stmt_identifiers ',' . ')'
  108 import_stmt_identifiers: import_stmt_identifiers ',' . identifier
  109                        | import_stmt_identifiers ',' . identifier AS name

    IDENTIFIER  сдвиг, и переход в состояние 14
    ')'         сдвиг, и переход в состояние 161

    identifier  переход в состояние 156


состояние 153

   86 import_stmt: FROM relative_module IMPORT '(' identifier import_stmt_identifiers ')' .

    $default  вывод с использованием правила 86 (import_stmt)


состояние 154

   83 import_stmt: FROM relative_module IMPORT identifier AS name import_stmt_identifiers .
  108 import_stmt_identifiers: import_stmt_identifiers . ',' identifier
  109                        | import_stmt_identifiers . ',' identifier AS name

    ','  сдвиг, и переход в состояние 145

    $default  вывод с использованием правила 83 (import_stmt)


состояние 155

  107 import_stmt_identifiers: ',' identifier AS . name

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 118
    name        переход в состояние 162


состояние 156

  108 import_stmt_identifiers: import_stmt_identifiers ',' identifier .
  109                        | import_stmt_identifiers ',' identifier . AS name

    AS  сдвиг, и переход в состояние 163

    $default  вывод с использованием правила 108 (import_stmt_identifiers)


состояние 157

  105 modules: modules ',' module AS name .

    $default  вывод с использованием правила 105 (modules)


состояние 158

   89 import_stmt: FROM relative_module IMPORT '(' identifier AS name ',' . ')'
  106 import_stmt_identifiers: ',' . identifier
  107                        | ',' . identifier AS name

    IDENTIFIER  сдвиг, и переход в состояние 14
    ')'         сдвиг, и переход в состояние 164

    identifier  переход в состояние 144


состояние 159

   85 import_stmt: FROM relative_module IMPORT '(' identifier AS name ')' .

    $default  вывод с использованием правила 85 (import_stmt)


состояние 160

   87 import_stmt: FROM relative_module IMPORT '(' identifier AS name import_stmt_identifiers . ')'
   91            | FROM relative_module IMPORT '(' identifier AS name import_stmt_identifiers . ',' ')'
  108 import_stmt_identifiers: import_stmt_identifiers . ',' identifier
  109                        | import_stmt_identifiers . ',' identifier AS name

    ','  сдвиг, и переход в состояние 165
    ')'  сдвиг, и переход в состояние 166


состояние 161

   90 import_stmt: FROM relative_module IMPORT '(' identifier import_stmt_identifiers ',' ')' .

    $default  вывод с использованием правила 90 (import_stmt)


состояние 162

  107 import_stmt_identifiers: ',' identifier AS name .

    $default  вывод с использованием правила 107 (import_stmt_identifiers)


состояние 163

  109 import_stmt_identifiers: import_stmt_identifiers ',' identifier AS . name

    IDENTIFIER  сдвиг, и переход в состояние 14

    identifier  переход в состояние 118
    name        переход в состояние 167


состояние 164

   89 import_stmt: FROM relative_module IMPORT '(' identifier AS name ',' ')' .

    $default  вывод с использованием правила 89 (import_stmt)


состояние 165

   91 import_stmt: FROM relative_module IMPORT '(' identifier AS name import_stmt_identifiers ',' . ')'
  108 import_stmt_identifiers: import_stmt_identifiers ',' . identifier
  109                        | import_stmt_identifiers ',' . identifier AS name

    IDENTIFIER  сдвиг, и переход в состояние 14
    ')'         сдвиг, и переход в состояние 168

    identifier  переход в состояние 156


состояние 166

   87 import_stmt: FROM relative_module IMPORT '(' identifier AS name import_stmt_identifiers ')' .

    $default  вывод с использованием правила 87 (import_stmt)


состояние 167

  109 import_stmt_identifiers: import_stmt_identifiers ',' identifier AS name .

    $default  вывод с использованием правила 109 (import_stmt_identifiers)


состояние 168

   91 import_stmt: FROM relative_module IMPORT '(' identifier AS name import_stmt_identifiers ',' ')' .

    $default  вывод с использованием правила 91 (import_stmt)
